// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id          String   @id @default(cuid())
  title       String
  description String?
  
  price       Float    @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  instructor   Instructor @relation(fields: [instructorId], references: [id], onDelete: Cascade)
  instructorId String

  modules    Module[]
  courseTags CourseTag[]

  @@map("courses")
}

model Instructor {
  id        String   @id @default(cuid())
  name      String   @unique
  email     String   @unique
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  courses Course[]

  @@map("instructors")
}

model Tag {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  courseTags CourseTag[]

  @@map("tags")
}

model CourseTag {
  id       String @id @default(cuid())
  courseId String
  tagId    String

  // Relations
  course Course @relation(fields: [courseId], references: [id], onDelete: Cascade)
  tag    Tag    @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@unique([courseId, tagId])
  @@map("course_tags")
}

model Module {
  id       String @id @default(cuid())
  title    String
  order    Int    @default(0)
  courseId String

  // Relations
  course  Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  lessons Lesson[]

  @@map("modules")
}

model Lesson {
  id       String @id @default(cuid())
  title    String
  content  String?
  videoUrl String?
  order    Int     @default(0)
  moduleId String

  // Relations
  module Module @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  @@map("lessons")
}
